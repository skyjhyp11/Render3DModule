=====================================================================
配置汇总：

1.  复制文件 ProgramFiles 到本地 如： D:\ProgramFiles

2.  复制程序 Render3DModule 及 模板RenderData 到本地，如 D:\3D

3.  配置mitsuba 和 opencv环境变量：
	path中加上： 
		D:\ProgramFiles\External\opencv-2.4.10\opencv\build\x86\vc12\bin
		D:\ProgramFiles\Mitsuba_0.5.0_64

4. 在目录..Render3DModule\Debug中打开命令行执行：
	"Render3DModule.exe"s + " 渲染文件路径（如D:\3D\RenderData）"


===========================================================================================
Attention: 生产前，先要检查src obj是否正确， 因为程序会直接替换src_obj中的纹理图片！！！！，以提高效率
============================================================================================

0.统一文件结构
	1) 数据文件夹下应有：(见截图 "配置文件结构标准.png")
		4个文件夹： dst_png dst_xml log src_obj
		dst_xml下含有： 已经有生成好的背景.exr文件 template.xml文件(如:文件中指定exr文件路径为..\room.exr)
				xml文件命名: objID_xml
				texture 文件命名: objID_texture
	2）src_obj\obj 下的每个对象一个文件夹，文件夹名称应该对应.obj对象的名字
	3）src_obj\charlat 每张图片是一个贴图 （自动化？）
	4）dst_xml\文件夹下 已经为每一个obj对象 创建好了新的texture（= chartlet + old_texture）(自动化？)

1.下载安装 Mitsuba, 安装路径到系统环境变量path中 如：path 加上D:\PrograFiles\Mitsuba_0.5.0\

2.项目配置：
	下载spdlog, 配置include路径(如D:\PrograFiles\External\spdlog-1.x\include)到项目属性-VC++目录-包含目录
	下载tinyxml,配置 include目录 及 库目录 如：D:\PrograFiles\External\tinyxml\lib
	下载安装 opencv2.4.10,配置项目,参考 https://blog.csdn.net/YeziTong/article/details/85222120
	
3.warning LNK4098: 默认库“libcmtd.lib”与其他库的使用冲突；请使用 /NODEFAULTLIB:library
	项目－〉属性－〉配置属性－〉链接器－〉输入－〉忽略特定库－〉Libcmtd.lib
	
	
======================================================================
执行注意事项:
	修改template.xml模板,必须删掉已经依靠模板生成的.xml文件,重新生成!
	mitsuba不支持中文,不能处理含中文路径的obj/exr
	*_texture文件夹下的图片可以带中文
	可执行文件放到中文路径下没关系,可以执行
	
=======================================================================
开始渲染准备:
	1. obj文件夹
	2. 纹理文件
	3. obj原始纹理 位置 -> ini
	4. obj文件大小/位置/旋转角度  -> xml
=======================================================================
创建 MASK 模型：
	1. 准备好mask图片 放入 label文件夹下
	2. 修改配置文件 config.ini 中选项 CREATE_MASK_MODULE = true
	3. 运行程序即可

=======================================================================


